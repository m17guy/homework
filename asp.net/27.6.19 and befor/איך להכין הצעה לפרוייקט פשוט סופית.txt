שם הפרוייקט

מה הוא עושה

1 פיצ'ר 1
2. 2
3. 3


עמוד אחד שלם של ההסבר מיועד מישהו שהוא לקוח (ולא מבין כלום בטכנולוגיה)


1. שיחה + סיעור מוחות עם הלקוח.
- 10 דקות - הסבר 
-> התנגדויות

- אם ההתנגדות גורפת, לנסות להבין, לראות אם יש בסיס שגוי מבחינת ידע.
- התנגדויות נקודתיות, למשל פסילת חלק מהפיצ'רים או בקשות לתיקוני הפיצ'רים, או הכי טוב הצעת פיצ'רים חדשים

1. האם ההתנגדויות באמת משפרות את המוצר או רק את מצב הרוח של מי שמעלה אותן (אם יתקבלו)
2. האם זה מסבך את הפיתוח קצת או מאוד


א. נקבעה פגישת המשך לסגירת האפיון ותחילת פיתוח.

אפיון קצר. 


1. תאור כללי מתוקן של האפליקציה (בעקבות הפגישה) --> עמוד אחד.
2. תשתית. - מה נדרש כדי ל"הריץ" את המערכת (בצד שרת, בצד קליינט) ומה התאימות של החומרה לצורך השימוש.

--> הנתונים והתוכנה של השרת יאוחסנו, בהתאם לבקשת הלקוח על מחשב שלו או על שרת ב-AZZURE.

(אם הנתונים יאוחסנו על מחשב אצל הלקוח הוא יהיה אחראי לניהול, אבטחה, אל פסק, וכל עלות עתידית שכרוכה בכך. כולל אבטחה כנגד מתקפות סייבר וץץץץץ. בדרך כלל עלויות כאלה מוערכות בכמה אלפי דולרים לפחות בשנה.

להציע מחיר שכולל שנה אחסון ותחזוקה.

3. השלכות תחזוקתיות והשלכות כח אדם.	-  עלות שירותי ענן חודשית מוערכת ב-...

CORDOVA

4. FLOW שימוש במערכת ומסכים ברמת WIRE FRAMES:
א. תרחישי שימוש. -> אדמיניסטרטור, משתמש קצה

WIRE FRAMES - 

angular.io
--> עדיין לא נכנס לעומק לאפיון הטכני.
ניתן להגדיר את העיצוב לדפים באמצעות מעצב של הלקוח או לקבל את העיצוב הסטנדרטי שלנו ללא עלות.


אני מאשר הזמנה של הפיתוח בהתאם לאפיון הנ"ל.
מאשר תשלום בסך ____ .
מאשר שידוע לי שהפיתוח עשוי לקחת מספר חודשים ושאין לי ולא יהיו לי טענות כלפי המפתח מעבר לעלות הפיתוח.

על החתום _______






אתם	להלן "הספק"
הם	להלן "הלקוח"


1. בכל מקרה, הלקוח מתחייב שלא לתבוע מהספק דבר מלבד החזר הסכום הכספי ששולם על ידו בגין הפרוייקט, במקרה של מחלוקת לגבי הפרוייקט.



1. DESKTOP או web?	האם להשתמש ב-WPF או ב-asp.net?

מתי wpf - קהל יעד מצומצם, שמשתמש רק ב-WINDOWS ופנים ארגוני.
מערכת לניהול מלאי לחנות משקפיים, מערכת לחיזוי אמינות הלקוח על בסיס תמונה.

אפליקציה שמאפשרת לתרגם מסמכים ב-WORD משפה אחת לאחרת.

אם לעומת זה מדובר בשימוש של משתמשים מחוץ לארגון או בארגון עם מערכות הפעלה מגוונות או ארגון עם משתמשים מבוזרים - ASP.NET.

--> בחרנו טכנולוגיה.

--> בחירת מבני הנתונים/בסיס הנתונים.

האלמנטים (שכבות) המרכזיים בתוכנה: 		PRESENTATION LAYER - מה רואים
					LOGIC LAYER	-   איזה חישובים ועיבודים יש
					DATA LAYER	-   היצוג בזכרון ובבסיס הנתונים
מה צריך לשמור לאורך זמן
מה צריך לשמור באופן זמני - בסוף יתמפה למחלקות/אובייקטים
לפני ה-logic layer אם מדובר על asp.net  צריך להחליט אם הולכים על SPA או MVC רגיל.

spa - להגדיר את ה-WEB -API. (סיימתם את צד השרת)


















